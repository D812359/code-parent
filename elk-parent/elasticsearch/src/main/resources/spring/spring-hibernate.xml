<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <context:property-placeholder location="classpath:db.properties"/>

    <!--使用Druid配置数据源  -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
    	  <property name="driverClassName" value="${driverClass}" /> 
		  <property name="url" value="${jdbcUrl}" /> 
		  <property name="username" value="${user}" /> 
		  <property name="password" value="${password}" /> 
		
		  <!-- 配置初始化大小、最小、最大 --> 
		  <property name="initialSize" value="1" /> 
		  <property name="minIdle" value="1" /> 
		  <property name="maxActive" value="10" />
		
		  <!-- 配置获取连接等待超时的时间 --> 
		  <property name="maxWait" value="10000" />
		
		  <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
		  <property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		  <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
		  <property name="minEvictableIdleTimeMillis" value="300000" />
		
		  <property name="testWhileIdle" value="true" />
		
		  <!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
		  <property name="testOnBorrow" value="true" /> 
		  <property name="testOnReturn" value="false" />
		
		  <!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
		  <property name="poolPreparedStatements" value="true" /> 
		  <property name="maxPoolPreparedStatementPerConnectionSize" 
		   value="20" />
		
		  <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		
		  <property name="defaultAutoCommit" value="true" />
		
		  <!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
		  <!--mysql验证连接是否有效  -->
		  <property name="validationQuery" value="select 1 " />
		  <!-- oracle验证 连接是否有效-->
		  <!-- <property name="validationQuery" value="SELECT 'x' FROM DUAL" />  -->
		  <property name="filters" value="stat" /> 
		  <property name="proxyFilters"> 
		   <list> 
		    <ref bean="logFilter" /> 
		   </list> 
		  </property> 
	 </bean>
	  <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
	    <property name="statementExecutableSqlLogEnable" value="false" /> 
	 </bean>
      <!-- jdbc模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <!-- jdbc命名参数模板 -->
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>
    <!--配置sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop> 
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>

        <!-- 自动扫描注解方式配置的hibernate类文件 -->
         <property name="packagesToScan">
            <list>
                <value>com.atu.entity</value>
            </list>
        </property> 
        <!-- 采用hbm方式扫描 -->
       <!--  <property name="mappingLocations">
        	<list>
                <value>classpath:com.atuu/entity/*.hbm.xml</value>
            </list>
        </property> -->
    </bean>

    <!-- 配置事务管理器 -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="transactionManager" /> 
    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" />
            <tx:method name="insert*" />
            <tx:method name="cancel*" />
            <tx:method name="save*" />
            <tx:method name="update*" />
            <tx:method name="modify*" />
            <tx:method name="edit*" />
            <tx:method name="delete*" />
            <tx:method name="remove*" />
            <tx:method name="repair" />
            <tx:method name="deleteAndRepair" />
            <tx:method name="doAdd*" />
            <tx:method name="doUpdate*" />
            <tx:method name="doDelete*" />

            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="select*" propagation="SUPPORTS" />
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="load*" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <tx:method name="datagrid*" propagation="SUPPORTS" />
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.atu.service..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>
</beans>